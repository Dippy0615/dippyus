<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprVicViper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
hsp = 0;
vsp = 0;
movesp = 1.5;
global.powerup = 0;
invulnerable = false;
sprite_index = sprVicViper;
image_index = 0;
image_speed = 0;
score = 0;
hold = 0;
//Powerups
speedup = 0.7;
defaultshot = true;
missile = false;
double = false;
laser = false;
option = false;
shield = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invulnerable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

//Input
key_left = keyboard_check(vk_left);
key_right = keyboard_check(vk_right);
key_up = keyboard_check(vk_up);
key_down = keyboard_check(vk_down);

moveh = key_right - key_left;
movev = key_down - key_up;
hsp = moveh * movesp;
vsp = movev * movesp;

//Stop at the borders of the camera
if place_meeting(x+1,y,objCameraHR) &amp;&amp; (hsp &gt; 0) x = objCameraHR.x-13;
if place_meeting(x-1,y,objCameraHL) &amp;&amp; (hsp &lt; 0) x = objCameraHL.x+13;
if place_meeting(x,y+1,objCameraWD) &amp;&amp; (vsp &gt; 0) y = objCameraWD.y-7;
if place_meeting(x,y-1,objCameraWU) &amp;&amp; (vsp &lt; 0) y = objCameraWU.y+7;

x += global.scrollspeed + hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Power up &amp; Shooting

//Input
key_fire = keyboard_check_pressed(ord('Z'));
key_power = keyboard_check_pressed(ord('X'));

if (global.powerup &gt; 6) global.powerup = 1;

//Powering up
//Notes: Laser replaces double and vice versa
if (key_power) &amp;&amp; (global.powerup &gt; 0) 
{
    switch (global.powerup)
    {
        case 1: //Speed Up
        movesp += speedup; global.powerup = 0; 
        break;
        case 2: //Missile
        missile = true; global.powerup = 0; 
        break;
        case 3: //Double
        double = true; laser = false; global.powerup = 0; 
        break;
        case 4: //Laser
        defaultshot = false; double = false; laser = true; global.powerup = 0; 
        break;
        case 5: //Option
        option = true; global.powerup = 0;
        if (option == true) &amp;&amp; (!instance_exists(objOption)) 
        {
            instance_create(x,y,objOption);
        }
        break;
        case 6: //Shield (?)
        shield = true; global.powerup = 0;
        if (shield == true) &amp;&amp; (!instance_exists(objShield)) 
        {
            instance_create(x,y,objShield);
        }
        break;
    }
}

//Shooting
if (key_fire)
{
    if (defaultshot == true) //Default
    {
        instance_create(x,y+3,objDefaultShot);
    }
    if (missile == true) //Missile
    {
        if (!instance_exists(objMissile)) instance_create(x,y+3,objMissile);
    }
    if (double == true) //Double
    {
        if (!instance_exists(objDouble)) instance_create(x,y-3,objDouble);
    }
    if (laser == true) //Laser
    {
        instance_create(x,y+3,objLaser);
    }
}

//Laser: If held down Create a longer beam and repeat
if (keyboard_check(ord('Z'))) &amp;&amp; (laser == true)
{
    hold += 1;
    if (hold &lt; 5) {
        instance_create(x,y+3,objLaser);
    }
    if (hold &lt; 9) {
        instance_create(x,y+3,objLaser);
    }
    if (hold == 20) hold = 0;
}
if (keyboard_check_released(ord('Z'))) hold = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get hit &amp; Dying
if (place_meeting(x,y,objEnemyParent) &amp;&amp; (instance_exists(objShield) &amp;&amp; (invulnerable == false))) 
{
    objShield.shieldhealth -= 1;
    invulnerable = true;
    if (invulnerable == true) 
    {
        if alarm[0] == -1 alarm[0] = 60;
    }
}

if (alarm[0] == -1) invulnerable = false;

if (place_meeting(x,y,objEnemyParent) &amp;&amp; (!instance_exists(objShield)) &amp;&amp; invulnerable == false) instance_change(objViperExplosion,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change(objViperExplosion,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Power up
global.powerup += 1;
with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites

//Flash if invulnerable
if (invulnerable == true)
{
    if (global.stepcount mod 6 == 0)
            exit;
}
draw_self();

//Animate
if (vsp == 0) &amp;&amp; (!keyboard_check_released(vk_up) &amp;&amp; (!keyboard_check_released(vk_down)))
{
    if (sprite_index = sprVicViperUp) &amp;&amp; (image_index &lt; 0.10)
    { 
        sprite_index = sprVicViper;
        image_index = 0;
        image_speed = 0;
    }
    if (sprite_index = sprVicViperDown) &amp;&amp; (image_index &lt; 0.10)
    { 
        sprite_index = sprVicViper;
        image_index = 0;
        image_speed = 0;
    }
}

if (vsp &lt; 0) 
{
    sprite_index = sprVicViperUp;
    image_speed = 0.05;
    if (image_index &gt; 1) image_speed = 0;
}

if (vsp &gt; 0) 
{
    sprite_index = sprVicViperDown;
    image_speed = 0.05;
    if (image_index &gt; 1) image_speed = 0;
}

if (vsp == 0) &amp;&amp; (keyboard_check_released(vk_up))
{
    image_speed = -0.05;
}

if (vsp == 0) &amp;&amp; (keyboard_check_released(vk_down))
{
    image_speed = -0.05;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
