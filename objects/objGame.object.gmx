<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.stepcount = 0;
global.scrollspeed = 0.7;

if (global.checkpoint == 0) view_xview[0] = 0; 
if (global.checkpoint &gt; 0) view_xview[0] = global.checkpointX-256;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update FMOD every step
FMODUpdate();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Misc

//Global step count variable
global.stepcount += 1;
//Scroll the screen
view_xview[0] += global.scrollspeed;
if (view_xview+global.screen_width &gt; room_width) global.scrollspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI
display_set_gui_size(global.screen_width,global.screen_height);

draw_set_font(global.font);
draw_text(2,0,"1P");
draw_text(72,0,string(score));
draw_text(120,0,"HI");

draw_text(50,50,string(global.stepcount))

//Powerups
switch (global.powerup)
{
    case 0:
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 1: //Speed Up
    draw_sprite(sprPowerUpGUI,6,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 2: //Missile
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,7,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 3: //Double
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,8,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 4: //Laser
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,9,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 5: //Option
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,10,175,210);
    draw_sprite(sprPowerUpGUI,5,207,210);
    break;
    case 6: //Shield (?)
    draw_sprite(sprPowerUpGUI,0,47,210);
    draw_sprite(sprPowerUpGUI,1,79,210);
    draw_sprite(sprPowerUpGUI,2,111,210);
    draw_sprite(sprPowerUpGUI,3,143,210);
    draw_sprite(sprPowerUpGUI,4,175,210);
    draw_sprite(sprPowerUpGUI,11,207,210);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FMODAllStop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
